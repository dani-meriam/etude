import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
export interface AnimationTrigger {
    value: string | number;
    params: {
        [p: string]: any;
    };
}
export declare class SliderComponent implements OnChanges, AfterViewInit, OnDestroy {
    private hostRef;
    private cd;
    private zone;
    prevDisabled: boolean;
    nextDisabled: boolean;
    slideDone: EventEmitter<number>;
    notPanning: boolean;
    slideTrigger: AnimationTrigger;
    private wrapperWidth;
    private panOffset;
    private lastDoneEventToState;
    private readonly ngUnsubscribe$;
    private readonly easeOut;
    constructor(hostRef: ElementRef, cd: ChangeDetectorRef, zone: NgZone);
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    done(event: AnimationEvent): void;
    slide(direction: number): void;
    private startPress();
    private startPan();
    private pan(event);
    private endPan();
    private swipe(direction);
    private changeSlideTrigger(value?, offset?);
}
